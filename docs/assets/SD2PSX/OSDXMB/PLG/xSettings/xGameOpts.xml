<Options>
  <Option Type="CONTEXT" Icon="15">
    <Name>
      <String str="PS2 Logo (Digital)" />
      <String str="PS2 Logo (Digital)" />
      <String str="Logo de PS2 (Digital)" />
      <String str="PS2 Logo (Digital)" />
      <String str="Logo PS2 (Digitali)" />
      <String str="PS2 Logo (Digital)" />
      <String str="PS2 Logo (Digital)" />
    </Name>
    <Description>
      <String str="Show the PS2 logo on digital games." />
      <String str="Show the PS2 logo on digital games." />
      <String str="Muestra el logo de Playstation 2 en juegos digitales." />
      <String str="Zeige das PS2 Logo bei digitale Spiele." />
      <String str="Mostra il logo PS2 nei giochi digitali." />
      <String str="Show the PS2 logo on digital games." />
      <String str="Show the PS2 logo on digital games." />
    </Description>
    <Component Name="{NO}" Icon="-1" />
    <Component Name="{YES}" Icon="-1" />
    <Default Variable="Number(DATA.GAMESETS.LOGO)"/>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          DATA.GAMESETS.LOGO = (val == 1);
          let config = DATA.CONFIG.Get("neutrino.cfg");
          config["logo"] = DATA.GAMESETS.LOGO.toString();
          DATA.CONFIG.Push("neutrino.cfg", config);
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15">
    <Name>
      <String str="PS2 - Debug Colors" />
      <String str="PS2 - Debug Colors" />
      <String str="PS2 - Colores de Depuración" />
      <String str="PS2 - Debug-Farben" />
      <String str="PS2 - Colori di debug" />
      <String str="PS2 - Debug Colors" />
      <String str="PS2 - Debug Colors" />
    </Name>
    <Description>
      <String str="Show the debug colors on digital games." />
      <String str="Show the debug colors on digital games." />
      <String str="Muestra los colores de depuración en juegos digitales." />
      <String str="Debug-Farben bei digitalen Spielen anzeigen." />
      <String str="Mostra i colori di debug nei giochi digitali." />
      <String str="Show the debug colors on digital games." />
      <String str="Show the debug colors on digital games." />
    </Description>
    <Component Name="{NO}" Icon="-1" />
    <Component Name="{YES}" Icon="-1" />
    <Default Variable="Number(DATA.GAMESETS.DBC)"/>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          DATA.GAMESETS.DBC = (val == 1);
          let config = DATA.CONFIG.Get("neutrino.cfg");
          config["dbc"] = DATA.GAMESETS.DBC.toString();
          DATA.CONFIG.Push("neutrino.cfg", config);
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15">
    <Name>
      <String str="PS2 - Force Progressive" />
      <String str="PS2 - Force Progressive" />
      <String str="PS2 - Forzar Progresivo" />
      <String str="PS2 - Force Progressive" />
      <String str="PS2 - Force Progressive" />
      <String str="PS2 - Force Progressive" />
      <String str="PS2 - Force Progressive" />
    </Name>
    <Description>
      <String str="Force progressive scan mode on digital games." />
      <String str="Force progressive scan mode on digital games." />
      <String str="Forzar modo de escaneo progresivo en juegos digitales." />
      <String str="Force progressive scan mode on digital games." />
      <String str="Force progressive scan mode on digital games." />
      <String str="Force progressive scan mode on digital games." />
      <String str="Force progressive scan mode on digital games." />
    </Description>
    <Component Name="{NO}" Icon="-1" />
    <Component Name="{YES}" Icon="-1" />
    <Default Variable="Number(DATA.GAMESETS.GSM)"/>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          DATA.GAMESETS.GSM = (val == 1);
          let config = DATA.CONFIG.Get("neutrino.cfg");
          config["gsm"] = DATA.GAMESETS.GSM.toString();
          DATA.CONFIG.Push("neutrino.cfg", config);
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15">
    <Name>
      <String str="PS - Upscaler" />
      <String str="PS - Rehaussement" />
      <String str="PS - Mejorar resolución" />
      <String str="PS - Hochskalierer" />
      <String str="PS - Potenziatore risoluzione" />
      <String str="PS - Upscalen" />
      <String str="PS - Melhorar resolução" />
    </Name>
    <Component Name="{NO}" Icon="-1" />
    <Component Name="{YES}" Icon="-1" />
    <Default>
      <![CDATA[
        const cheats = ["480p"];
        switch(os.getcwd()[0].substring(0, 4))
        {
            case "host": return Number(getPOPSCheat(cheats, "", "host")[0]); break;
            case "pfs:": return Number(getPOPSCheat(cheats, "", "hdd")[0]); break;
            default: return Number(getPOPSCheat(cheats)[0]); break;
        }
      ]]>
    </Default>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          let cheats = []; cheats.push({ code: "480p", enabled: (val === 1) });
          setPOPSCheat(cheats);
          setPOPSCheat(cheats, "", "hdd");
          if (os.getcwd()[0].substring(0, 4) === "host") { setPOPSCheat(cheats, "", "host"); }
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15">
    <Name>
      <String str="PS - Smoothing" />
      <String str="PS - Lissage" />
      <String str="PS - Suavizado" />
      <String str="PS - Glättung" />
      <String str="PS - Smussatura" />
      <String str="PS - Smoothing" />
      <String str="PS - Suavização" />
    </Name>
    <Component Name="{NO}" Icon="-1" />
    <Component Name="{YES}" Icon="-1" />
    <Default>
      <![CDATA[
        const cheats = ["SMOOTH"];
        switch(os.getcwd()[0].substring(0, 4))
        {
            case "host": return Number(getPOPSCheat(cheats, "", "host")[0]); break;
            case "pfs:": return Number(getPOPSCheat(cheats, "", "hdd")[0]); break;
            default: return Number(getPOPSCheat(cheats)[0]); break;
        }
      ]]>
    </Default>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          let cheats = []; cheats.push({ code: "SMOOTH", enabled: (val === 1) });
          setPOPSCheat(cheats);
          setPOPSCheat(cheats, "", "hdd");
          if (os.getcwd()[0].substring(0, 4) === "host") { setPOPSCheat(cheats, "", "host"); }
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15">
    <Name>
      <String str="PS - In-Game Reset Mode" />
      <String str="PS - In-Game Reset Mode" />
      <String str="PS - Modo de Reinicio" />
      <String str="PS - In-Game Reset Mode" />
      <String str="PS - In-Game Reset Mode" />
      <String str="PS - In-Game Reset Mode" />
      <String str="PS - In-Game Reset Mode" />
    </Name>
    <Component Icon="-1">
      <Name>
        <String str="Default" />
        <String str="Default" />
        <String str="Por Defecto" />
        <String str="Default" />
        <String str="Default" />
        <String str="Default" />
        <String str="Default" />
      </Name>
    </Component>
    <Component Name="1: [L1 + L2 + R1 + R2 + X + D]" Icon="-1" />
    <Component Name="2: [SELECT + START]" Icon="-1" />
    <Component Name="3: [L1 + L2 + R1 + R2 + SELECT + START]" Icon="-1" />
    <Component Icon="-1">
      <Name>
        <String str="Without Menu (Mode 1)" />
        <String str="Without Menu (Mode 1)" />
        <String str="Sin Menu (Modo 1)" />
        <String str="Without Menu (Mode 1)" />
        <String str="Without Menu (Mode 1)" />
        <String str="Without Menu (Mode 1)" />
        <String str="Without Menu (Mode 1)" />
      </Name>
    </Component>
    <Component Icon="-1">
      <Name>
        <String str="Without Menu (Mode 2)" />
        <String str="Without Menu (Mode 2)" />
        <String str="Sin Menu (Modo 2)" />
        <String str="Without Menu (Mode 2)" />
        <String str="Without Menu (Mode 2)" />
        <String str="Without Menu (Mode 2)" />
        <String str="Without Menu (Mode 2)" />
      </Name>
    </Component>
    <Component Icon="-1">
      <Name>
        <String str="Without Menu (Mode 3)" />
        <String str="Without Menu (Mode 3)" />
        <String str="Sin Menu (Modo 3)" />
        <String str="Without Menu (Mode 3)" />
        <String str="Without Menu (Mode 3)" />
        <String str="Without Menu (Mode 3)" />
        <String str="Without Menu (Mode 3)" />
      </Name>
    </Component>
    <Component Name="{NO}" Icon="-1" />
    <Default>
      <![CDATA[
        const cheats = ["NOIGR", "IGR0", "IGR1", "IGR2", "IGR3", "IGR4", "IGR5"];
        let statuses = [];
        switch(os.getcwd()[0].substring(0, 4))
        {
            case "host": statuses = getPOPSCheat(cheats, "", "host"); break;
            case "pfs:": statuses = getPOPSCheat(cheats, "", "hdd"); break;
            default: statuses = getPOPSCheat(cheats); break;
        }

        let defval = (statuses[0]) ? 7 : 0;
        defval = (statuses[1]) ? 1 : defval;
        defval = (statuses[2]) ? 2 : defval;
        defval = (statuses[3]) ? 3 : defval;
        defval = (statuses[4]) ? 4 : defval;
        defval = (statuses[5]) ? 5 : defval;
        defval = (statuses[6]) ? 6 : defval;
        return defval;
      ]]>
    </Default>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          const cheats = [];
          cheats.push({ code: "IGR0", enabled: (val === 1) });
          cheats.push({ code: "IGR1", enabled: (val === 2) });
          cheats.push({ code: "IGR2", enabled: (val === 3) });
          cheats.push({ code: "IGR3", enabled: (val === 4) });
          cheats.push({ code: "IGR4", enabled: (val === 5) });
          cheats.push({ code: "IGR5", enabled: (val === 6) });
          cheats.push({ code: "NOIGR", enabled: (val === 7) });
          setPOPSCheat(cheats);
          setPOPSCheat(cheats, "", "hdd");
          if (os.getcwd()[0].substring(0, 4) === "host") { setPOPSCheat(cheats, "", "host"); }
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15" Name="PS - HD TV Fix">
    <Component Name="{NO}" Icon="-1" />
    <Component Name="{YES}" Icon="-1" />
    <Default>
      <![CDATA[
        const cheats = ["HDTVFIX"];
        switch(os.getcwd()[0].substring(0, 4))
        {
            case "host": return Number(getPOPSCheat(cheats, "", "host")[0]); break;
            case "pfs:": return Number(getPOPSCheat(cheats, "", "hdd")[0]); break;
            default: return Number(getPOPSCheat(cheats)[0]); break;
        }
      ]]>
    </Default>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          let cheats = []; cheats.push({ code: "HDTVFIX", enabled: (val === 1) });
          setPOPSCheat(cheats);
          setPOPSCheat(cheats, "", "hdd");
          if (os.getcwd()[0].substring(0, 4) === "host") { setPOPSCheat(cheats, "", "host"); }
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15">
    <Name>
      <String str="PS - Widescreen Mode" />
      <String str="PS - Widescreen Mode" />
      <String str="PS - Modo de Pantalla ancha" />
      <String str="PS - Widescreen Mode" />
      <String str="PS - Widescreen Mode" />
      <String str="PS - Widescreen Mode" />
      <String str="PS - Widescreen Mode" />
    </Name>
    <Component Name="{NO}" Icon="-1" />
    <Component Name="16:9" Icon="-1" />
    <Component Name="Ultra" Icon="-1" />
    <Component Name="x3" Icon="-1" />
    <Default>
      <![CDATA[
        const cheats = ["WIDESCREEN", "ULTRA_WIDESCREEN", "EYEFINITY"];
        let statuses = [];
        switch(os.getcwd()[0].substring(0, 4))
        {
            case "host": statuses = getPOPSCheat(cheats, "", "host"); break;
            case "pfs:": statuses = getPOPSCheat(cheats, "", "hdd"); break;
            default: statuses = getPOPSCheat(cheats); break;
        }

        let defval = (statuses[0]) ? 1 : 0;
        defval = (statuses[1]) ? 2 : defval;
        defval = (statuses[2]) ? 3 : defval;
        return defval;
      ]]>
    </Default>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          const cheats = [];
          cheats.push({ code: "WIDESCREEN", enabled: (val === 1) });
          cheats.push({ code: "ULTRA_WIDESCREEN", enabled: (val === 2) });
          cheats.push({ code: "EYEFINITY", enabled: (val === 3) });
          setPOPSCheat(cheats);
          setPOPSCheat(cheats, "", "hdd");
          if (os.getcwd()[0].substring(0, 4) === "host") { setPOPSCheat(cheats, "", "host"); }
        }
      ]]>
    </Confirm>
  </Option>
  <Option Type="CONTEXT" Icon="15" Name="PS - Scanlines">
    <Component Name="{NO}" Icon="-1" />
    <Component Name="{YES}" Icon="-1" />
    <Default>
      <![CDATA[
        const cheats = ["SCANLINES"];
        switch(os.getcwd()[0].substring(0, 4))
        {
            case "host": return Number(getPOPSCheat(cheats, "", "host")[0]); break;
            case "pfs:": return Number(getPOPSCheat(cheats, "", "hdd")[0]); break;
            default: return Number(getPOPSCheat(cheats)[0]); break;
        }
      ]]>
    </Default>
    <Confirm>
      <![CDATA[
        function(DATA, val) {
          let cheats = []; cheats.push({ code: "SCANLINES", enabled: (val === 1) });
          setPOPSCheat(cheats);
          setPOPSCheat(cheats, "", "hdd");
          if (os.getcwd()[0].substring(0, 4) === "host") { setPOPSCheat(cheats, "", "host"); }
        }
      ]]>
    </Confirm>
  </Option>
</Options>
