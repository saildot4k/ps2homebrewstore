# Crystal Chip BootManager Menus Script v1.5
# (c) 2005-2006 Crystal Chips
# http:/www.crystal-chips.com/
#
# This script is used by BootManager to create and control the menu system.
#
# Modification: 
# R3Z3N has modified this so that APPS and FW choices can be made when booted from CD. DFFS options removed for CC 1.0 and 1.1.
# Added Security configuration, a pin lockout of advanced functions. 0000 disables, as does reinstalling BM as it wipes configs.
# Modified :MENU_CHOOSE_COMP to search for apps in 2 more locations for non_mc. Due to a wildcard bug, cannot search for apps 
# in root folders of memory card unless BM/SCRIPTS/BMRTFLDR.PBT is present. Added app showing app directories confirming to 
# remove/install apps
# 
# SET "BM.INSTALLER_MODE" "1"

# Keep this script resident in memory to speed up calls to it.
KEEP

SET "BM.MENU_MAJOR_VER" "1"
SET "BM.MENU_MINOR_VER" "5"

IF NOT EQU "$LANG_LOADED$" "$BM.CNF_LANG$"
    SET "LANG_LOADED" ""
    IF NOT FAIL LOADEXEC "PBAT" "$BM.CNF_LANG$" "LOAD"
        SET "LANG_LOADED" "$BM.CNF_LANG$"
    ENDIF

    # Default to English
    IF EQU "$LANG_LOADED$" ""
        IF NOT FAIL LOADEXEC "PBAT" "$BM.BM_PATH$/LANG/BMENGL.PBT" "LOAD"
            SET "LANG_LOADED" "$BM.BM_PATH$/LANG/BMENGL.PBT"
        ENDIF
    ENDIF

    IF EQU "$LANG_LOADED$" ""
        ECHO "No language loaded!"
        EXIT -1
    ENDIF
ENDIF

GOTO "$ARG1$"

:CONFIG_SAVE
    IF FAIL SAVEVARS "BM.CNF_*" "$BM.BM_PATH$/CONFIG/BMCONF.PBT"
        MESSAGE "$BM.TXT_SAVE_CONF_FAIL$"
    ELSE
        SET "BM.CONFIG_CHANGED" "0"
    ENDIF
    GOTO "MENU_MAIN"

:THEME_CONFIG_SAVE
    IF FAIL SAVEVARS "BM.THM_CNF_*" "$BM.BM_PATH$/CONFIG/THMCONF.PBT"
        MESSAGE "$BM.TXT_SAVE_THM_FAIL$"
    ELSE
        SET "BM.THM_CONF_CHANGED" "0"
    ENDIF
    GOTO "MENU_MAIN"

:NET_CONFIG_SAVE
    RM "$BM.BM_PATH$/CONFIG/IPCONFIG.DAT"
    FPRINT "$BM.BM_PATH$/CONFIG/IPCONFIG.DAT" "$BM.CNF_NET_IP0$.$BM.CNF_NET_IP1$.$BM.CNF_NET_IP2$.$BM.CNF_NET_IP3$ $BM.CNF_NET_SM0$.$BM.CNF_NET_SM1$.$BM.CNF_NET_SM2$.$BM.CNF_NET_SM3$ $BM.CNF_NET_DG0$.$BM.CNF_NET_DG1$.$BM.CNF_NET_DG2$.$BM.CNF_NET_DG3$"
    IF EXISTS "mc0:/SYS-CONF"
        RRM "mc0:/SYS-CONF/IPCONFIG.DAT"
        FPRINT "mc0:/SYS-CONF/IPCONFIG.DAT" "$BM.CNF_NET_IP0$.$BM.CNF_NET_IP1$.$BM.CNF_NET_IP2$.$BM.CNF_NET_IP3$ $BM.CNF_NET_SM0$.$BM.CNF_NET_SM1$.$BM.CNF_NET_SM2$.$BM.CNF_NET_SM3$ $BM.CNF_NET_DG0$.$BM.CNF_NET_DG1$.$BM.CNF_NET_DG2$.$BM.CNF_NET_DG3$"
    ENDIF
    IF EXISTS "mc1:/SYS-CONF"
        RRM "mc1:/SYS-CONF/IPCONFIG.DAT"
        FPRINT "mc1:/SYS-CONF/IPCONFIG.DAT" "$BM.CNF_NET_IP0$.$BM.CNF_NET_IP1$.$BM.CNF_NET_IP2$.$BM.CNF_NET_IP3$ $BM.CNF_NET_SM0$.$BM.CNF_NET_SM1$.$BM.CNF_NET_SM2$.$BM.CNF_NET_SM3$ $BM.CNF_NET_DG0$.$BM.CNF_NET_DG1$.$BM.CNF_NET_DG2$.$BM.CNF_NET_DG3$"
    ENDIF
    SET "BM.NET_CONFIG_CHANGED" "0"
    GOTO "MENU_MAIN"

:MENU_MAIN
    IF NEQ "$BM.INSTALLER_MODE$" "1"
        IF EQU "$BM.CONFMENU_LOADED$" "1"
            KILLSESS "$BM.SCRIPTS$/CONFMENU.PBT"
            UNSET "BM.CONFMENU_LOADED"
        ENDIF

        IF EQU "$BM.CONFIG_CHANGED$" "1"
            GOTO "CONFIG_SAVE"
        ENDIF

        IF EQU "$BM.THM_CONF_CHANGED$" "1"
            GOTO "THEME_CONFIG_SAVE"
        ENDIF

        IF EQU "$BM.NET_CONFIG_CHANGED$" "1"
            GOTO "NET_CONFIG_SAVE"
        ENDIF
    ENDIF

    IF EQU "$BMINST_LOADED$" "1"
        KILLSESS "$BM.BM_PATH$/APPS/BM/APPINFO.PBT"
        UNSET "BMINST_LOADED"
    ENDIF

    CLEARWIDGETS
    SETTITLE "$BM.TXT_MAIN_MENU$"
    # ADDWIDGET "CALL" "Debug" "" "$ARG0$" "MENU_DBG"
    IF EQU "$BM.INSTALLER_MODE$" "1"
        ADDWIDGET "CALL" "$BM.TXT_INST_BM$" "$BM.TXT_HINT_INST_BM$" "$ARG0$" "MENU_INST_BM"
        ADDWIDGET "CALL" "$BM.TXT_APP_BROWSER$" "$BM.TXT_HINT_APP_BROWSER$" "$ARG0$" "MENU_APP_BROWSER"
        ADDWIDGET "CALL" "$BM.TXT_DEV_MANAGER$" "$BM.TXT_HINT_DEV_MANAGER$" "$ARG0$" "MENU_DEV_MANAGER"
        ADDWIDGET "CALL" "$BM.TXT_FW_MANAGER$" "$BM.TXT_HINT_FW_MANAGER$" "$ARG0$" "MENU_FW_MANAGER"
        ADDWIDGET "CALL" "$BM.TXT_MC_MANAGER$" "$BM.TXT_HINT_MC_MANAGER$" "$ARG0$" "MENU_MC_MANAGER"
        ADDWIDGET "CALL" "$BM.TXT_SYS_INFO$" "$BM.TXT_HINT_SYS_INFO$" "$ARG0$" "MENU_SYS_INFO"
        ADDWIDGET "CALL" "$BM.TXT_DISC_TEST$" "$BM.TXT_HINT_DISC_TEST$" "$ARG0$" "MENU_DISC_TEST"
    ELSE
        ADDWIDGET "CALL" "$BM.TXT_BOOT_MEDIA$" "$BM.TXT_HINT_BOOT_MENU$" "$ARG0$" "MENU_BOOT"
        ADDWIDGET "CALL" "$BM.TXT_APP_BROWSER$" "$BM.TXT_HINT_APP_BROWSER$" "$ARG0$" "MENU_APP_BROWSER"
        # Hide Device, FW and Memory Card manager if PIN is not 00
        IF EQU "$BM.CNF_PIN_NUM0$$BM.CNF_PIN_NUM1$" "00"
            ADDWIDGET "CALL" "$BM.TXT_DEV_MANAGER$" "$BM.TXT_HINT_DEV_MANAGER$" "$ARG0$" "MENU_DEV_MANAGER"
            ADDWIDGET "CALL" "$BM.TXT_FW_MANAGER$" "$BM.TXT_HINT_FW_MANAGER$" "$ARG0$" "MENU_FW_MANAGER"
            ADDWIDGET "CALL" "$BM.TXT_MC_MANAGER$" "$BM.TXT_HINT_MC_MANAGER$" "$ARG0$" "MENU_MC_MANAGER"
        ENDIF
        ADDWIDGET "CALL" "$BM.TXT_CONFIGURATION$" "$BM.TXT_HINT_CONFIGURATION$" "$ARG0$" "MENU_CONFIG"
        ADDWIDGET "CALL" "$BM.TXT_SYS_INFO$" "$BM.TXT_HINT_SYS_INFO$" "$ARG0$" "MENU_SYS_INFO"
        ADDWIDGET "CALL" "$BM.TXT_RELOAD_MENU$" "$BM.TXT_HINT_RELOAD_MENU$" "$ARG0$" "MENU_RELOAD"
        ADDWIDGET "LABEL" ""
        ADDWIDGET "CALL" "$BM.TXT_POWER_OFF$..." "$BM.TXT_POWER_OFF$ $BM.TXT_THE_PS2$" "$ARG0$" "MENU_CONFIRM_YESNO" "$BM.TXT_POWER_OFF$ $BM.TXT_THE_PS2$?" "$ARG0$" "POWEROFF"
        # Inform user that Security Lockout is enabled
        IF NEQ "$BM.CNF_PIN_NUM0$$BM.CNF_PIN_NUM1$" "00"
            ADDWIDGET "LABEL" "$BM.TXT_LOCKOUT_WARNING$"
        ENDIF
    ENDIF
    RETURN 0

:MENU_INST_BM
    CLEARWIDGETS
    SKIPBACK
    SETTITLE "$BM.TXT_INSTALL_BM_TO$"
    ADDWIDGET "LABEL" "$BM.TXT_DEV$"
    LOADEXEC "PBATS" "$BM.BM_PATH$/DEVS/*/DEVINFO.PBT" "IF_QUERY" "^"$BM.BM_PATH$/APPS/BM/APPINFO.PBT^" ^"INSTALL^""
    RETURN 0

:MENU_DBG
    CLEARWIDGETS
#    SET "DEV" "mc0:"
#    SET "DEV" "mc1:"
#    SET "DEV" "dffs:"
#    COPY "host:/BM/BM2.ELF" "$DEV$/BM/BM2.ELF"
#    COPY "host:/BM/SHARED/IOMANX.IRX" "$DEV$/BM/SHARED/IOMANX.IRX"
#    FPRINT "host:/MY_TEXT.TXT" "This text will be written into MY_TEXT.TXT."
    PARSEPATH "$PWD$" "SRC_DEV" "SRC_PATH" "SRC_FILE"
    ECHO "$SRC_DEV$  $SRC_PATH$  $SRC_FILE$"
    ECHO "$LANG_LOADED$"
    RETURN 0

:MENU_RELOAD
    EXIT 0

:MENU_BOOT
    CLEARWIDGETS
    SETTITLE "$BM.TXT_BOOT_MEDIA$"
    IF NOT EQU "$BM.DISC_CONTENT$" ""
        LOADEXEC "PBAT" "$BM.SCRIPTS$/BOOTMENU.PBT" "MENU" "$BM.DISC_CONTENT$"
    ENDIF
    RETURN 0

:POWEROFF
    LOADEXEC "PBAT" "$BM.SCRIPTS$/LOADEXEC.PBT" "$BM.BM_PATH$/SHARED/POWEROFF.ELF"
    EXIT 0

:PSEUDO
    CLEARWIDGETS
    ECHO "Back..."
    RETURN 0

########################################################################

:MENU_FW_MANAGER
    CLEARWIDGETS
    SETTITLE "$BM.TXT_FW_MANAGER$"
#   DFFS options only show for CC 2.0 (If 1MB or larger flash is installed, it is considered CC2.0 even if user replaces flash on 1.1+)
    IF EQU "$BM.CC_MAJOR_VER$" "2"
        ADDWIDGET "CALL" "$BM.TXT_FORMAT_DFFS$" "$BM.TXT_HINT_FORMAT_DFFS$" "$ARG0$" "FORMAT_DEV" "dffs"
        ADDWIDGET "CALL" "$BM.TXT_DFFS_REM_BM$" "$BM.TXT_HINT_DFFS_REM_BM$" "$ARG0$" "REM_DIR" "dffs:/BM"
    ENDIF
    ADDWIDGET "CALL" "$BM.TXT_UPG_FW$" "$BM.TXT_HINT_UPG_FW$" "$ARG0$" "MENU_CHOOSE_DEV" "INSTALL" "FW" "ACTION"
    ADDWIDGET "CALL" "$BM.TXT_ERASE_FW$" "$BM.TXT_HINT_ERASE_FW$" "$ARG0$" "MENU_CONFIRM_YESNO" "$BM.TXT_ASK_ERASE_FW$" "$ARG0$" "ERASE_FW"
    RETURN 0

:ERASE_FW
    CLEARWIDGETS
    IF FAIL ERASEFW
        MESSAGE "$BM.TXT_DEL_FW_FAIL$"
    ENDIF
    RETURN 0

:MENU_APP_BROWSER
    CLEARWIDGETS
    SETTITLE "$BM.TXT_APPS$"
    ADDWIDGET "CALL" "$BM.TXT_MENU_RUN$" "$BM.TXT_HINT_RUN_APP$" "$ARG0$" "MENU_CHOOSE_DEV" "RUN" "APP" "ACTION"
    IF EQU "$BM.CNF_PIN_NUM0$$BM.CNF_PIN_NUM1$" "00"
        ADDWIDGET "CALL" "$BM.TXT_MENU_INSTALL$" "$BM.TXT_HINT_INSTALL_APP$" "$ARG0$" "MENU_CHOOSE_DEV" "INSTALL" "APP" "MENU_CHOOSE_INST_DEV"
        # If BM.CNF_REMOVE_INSTALL_CONFIRM is 1 or 3 goto MENU_CONFIRM_YESNO. Otherwise if 0 or 2 do not confirm REMOVE.
        IF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "1"
            ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_APP$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "APP" "MENU_CONFIRM_YESNO"
        ELSEIF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "3"
            ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_APP$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "APP" "MENU_CONFIRM_YESNO"
        ELSEIF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "0"
            ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_APP$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "APP" "ACTION"
        ELSEIF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "2"
            ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_APP$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "APP" "ACTION"
        ENDIF
    ENDIF
    RETURN 0

:MENU_DEV_MANAGER
    CLEARWIDGETS
    SETTITLE "$BM.TXT_DEV_MANAGER$"
    ADDWIDGET "CALL" "$BM.TXT_MENU_INSTALL$" "$BM.TXT_HINT_INSTALL_DEV$" "$ARG0$" "MENU_CHOOSE_DEV" "INSTALL" "DEV" "MENU_CHOOSE_INST_DEV"
    # If BM.CNF_REMOVE_INSTALL_CONFIRM is 1 or 3 goto MENU_CONFIRM_YESNO. Otherwise if 0 or 2 do not confirm REMOVE.
    IF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "1"
        ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_DEV$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "DEV" "MENU_CONFIRM_YESNO"
    ELSEIF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "3"
        ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_DEV$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "DEV" "MENU_CONFIRM_YESNO"
    ELSEIF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "0"
        ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_DEV$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "DEV" "ACTION"
    ELSEIF EQU "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "2"
        ADDWIDGET "CALL" "$BM.TXT_MENU_REMOVE$" "$BM.TXT_HINT_REMOVE_DEV$" "$ARG0$" "MENU_CHOOSE_DEV" "REMOVE" "DEV" "ACTION"
    ENDIF

    ADDWIDGET "LABEL" "$BM.TXT_REMOVE_AVAIL$ $BM.BM_PATH$/DEVS/*"
    IF EXISTS "$BM.BM_PATH$/DEVS/USB"
        ADDWIDGET "LABEL" "  $BM.TXT_USB_DESC_1$"
    ENDIF

    IF EXISTS "$BM.BM_PATH$/DEVS/PS2HDD"
        ADDWIDGET "LABEL" "  $BM.TXT_HDD_DESC_1$"
        IF GTE "$BM.BIOS_MAJOR_VER$$BM.BIOS_MINOR_VER$" "220"
            ADDWIDGET "LABEL" "   -$BM.TXT_HDD_DESC_1$ $BM.TXT_UNSUPPORTED$ $BM.CONSOLE_MODEL$"
        ENDIF
    ENDIF
    
    IF EXISTS "$BM.BM_PATH$/DEVS/MMCE"
        ADDWIDGET "LABEL" "  $BM.TXT_MMCE_DESC_1$"
    ENDIF

    IF EXISTS "$BM.BM_PATH$/DEVS/NET"
        ADDWIDGET "LABEL" "  $BM.TXT_NET_DESC$"
    ENDIF

    IF EXISTS "$BM.BM_PATH$/DEVS/FTP"    
        ADDWIDGET "LABEL" "  $BM.TXT_FTP_DESC$"
        IF NOT EXISTS "$BM.BM_PATH$/DEVS/NET"
            ADDWIDGET "LABEL" "     -$BM.TXT_NET_DESC$ $BM.TXT_MISSING$!!"
        ENDIF
    ENDIF
    
    IF EXISTS "$BM.BM_PATH$/DEVS/HOST"
        ADDWIDGET "LABEL" "  $BM.TXT_HOST_DESC_1$"
        IF NOT EXISTS "$BM.BM_PATH$/DEVS/NET"
            ADDWIDGET "LABEL" "     -$BM.TXT_NET_DESC$ $BM.TXT_MISSING$!!"
        ENDIF
    ENDIF

    ADDWIDGET "LABEL" ""
    ADDWIDGET "CALL" "$BM.TXT_BACK$" "$BM.TXT_HINT_BACK$" "$ARG0$" "PSEUDO"
    RETURN 0

:MENU_CHOOSE_DEV
    CLEARWIDGETS
    EVAL SETTITLE "$$BM.TXT_$ARG2$_$ARG3$_FROM$$"
    ADDWIDGET "LABEL" "$BM.TXT_DEV$"
    LOADEXEC "PBATS" "$BM.BM_PATH$/DEVS/*/DEVINFO.PBT" "IF_QUERY" "^"$ARG0$^" ^"MENU_CHOOSE_COMP^" ^"$ARG2$^" ^"$ARG3$^" ^"$ARG4$^"" "" "$ARG2$"
    RETURN 0

:MENU_CHOOSE_COMP
    CLEARWIDGETS
    EVAL SETTITLE "$$BM.TXT_$ARG2$_AVAIL$$ $ARG5$"
    EVAL ADDWIDGET "LABEL" "$$BM.TXT_$ARG3$$$"
    IF EQU "$BM.CNF_APPDIR$" "1"
        ADDWIDGET "LABEL" "$ARG5$:/BM/$ARG3$S/*"
    ENDIF
    # ARG2 added at end to be used to hide apps when browsing. Is RUN, INSTALL or REMOVE (ARG3 in *INFO.PBT). Reference BM/APPS/BM/APPINFO.PBT for usage
    LOADEXEC "PBATS" "$ARG5$:/BM/$ARG3$S/*/$ARG3$INFO.PBT" "QUERY" "^"$ARG0$^" ^"$ARG4$^" ^"$ARG2$^" ^"$ARG3$^"" "$ARG2$"
    # ALso look for apps on defined root folders and /APPS/*
    IF MATCHES "APP" "$ARG3$"
        # Updates BMRTFLDR.PBT if found at root of any device and then deletes from root of device
        IF EXISTS "$ARG5$:/BMRTFLDR.PBT"
            IF FAIL COPY "$ARG5$:/BMRTFLDR.PBT" "$BM.SCRIPTS$/BMRTFLDR.PBT"
                MESSAGE "$BM.TXT_INST_FAIL$ BMRTFLDR.PBT!"
            ELSEIF FAIL RRM "$ARG5$:/BMRTFLDR.PBT"
                IF FAIL RRM "$ARG5$:/BMRTFLDR.PBT"
                        MESSAGE "$BM.TXT_REM_FAIL$ $ARG5$:/BMRTFLDR.PBT!"
                ENDIF
            ENDIF
        ENDIF
        IF EQU "$BM.CNF_APPDIR$" "1"
            ADDWIDGET "LABEL" "$ARG5$:/*"
        ENDIF
        # Searches BMRTFLDR.PBT to support root folders, edit BMRTFLDR.PBT as needed
        LOADEXEC "PBAT" "$BM.SCRIPTS$/BMRTFLDR.PBT" "$ARG1$" "$ARG2$" "$ARG3$" "$ARG4$" "$ARG5$" "$ARG6$"
        IF NOT MATCHES "mc?" "$ARG5$"
            IF EQU "$BM.CNF_APPDIR$" "1"
                ADDWIDGET "LABEL" "$ARG5$:/APPS/*"
            ENDIF
             # Searches nonmc:/APPS/*
            LOADEXEC "PBATS" "$ARG5$:/APPS/*/$ARG3$INFO.PBT" "QUERY" "^"$ARG0$^" ^"$ARG4$^" ^"$ARG2$^" ^"$ARG3$^"" "$ARG2$"
        ENDIF
    ENDIF
    RETURN 0

:MENU_CHOOSE_INST_DEV
    CLEARWIDGETS
    EVAL SETTITLE "$$BM.TXT_INSTALL_$ARG3$_TO$$"
    ADDWIDGET "LABEL" "$ARG8$"
    ADDWIDGET "LABEL" "$BM.TXT_FROM$"
    ADDWIDGET "LABEL" "  $ARG9$"
    ADDWIDGET "LABEL" "$BM.TXT_TO$ $BM.TXT_DEV$"
    IF GTE "$BM.CNF_REMOVE_INSTALL_CONFIRM$" "2" 
        LOADEXEC "PBATS" "$BM.BM_PATH$/DEVS/*/DEVINFO.PBT" "IF_QUERY" "^"$ARG0$^" ^"MENU_CONFIRM_YESNO^" ^"$ARG3$^" ^"$ARG4$^"" "$ARG4$" "$ARG2$" "$ARG1$" "$ARG8$" "$ARG9$" "$ARG10$" "$ARG11$"
    ELSE
        LOADEXEC "PBATS" "$BM.BM_PATH$/DEVS/*/DEVINFO.PBT" "IF_QUERY" "^"$ARG0$^" ^"INSTALL_COMP^" ^"$ARG3$^" ^"$ARG4$^"" "$ARG4$" "$ARG2$" "$ARG1$"
    ENDIF
    SKIPBACK
    RETURN 0

:MENU_CONFIRM_YESNO
# See if I can combine these to an extent same with combining action and install_comp
    CLEARWIDGETS
    SETTITLE "$BM.TXT_CONFIRM_CHOICE$"
    SKIPBACK
    IF MATCHES "REMOVE" "$ARG2$"
        ADDWIDGET "LABEL" "$BM.TXT_MENU_REMOVE$ $ARG8$"
        ADDWIDGET "LABEL" "$BM.TXT_FROM$"
        ADDWIDGET "LABEL" "  $ARG9$ ?"
        ADDWIDGET "RETURN" "$BM.TXT_NO$" "$BM.TXT_HINT_CANCEL_CHOICE$"
        ADDWIDGET "CALL" "$BM.TXT_YES$" "$BM.TXT_HINT_CONFIRM_CHOICE$" "$ARG0$" "ACTION" "$ARG2$" "$ARG3$" "$ARG4$"
    ELSEIF MATCHES "INSTALL" "$ARG6$"
        ADDWIDGET "LABEL" "$BM.TXT_MENU_INSTALL$ $ARG8$"
        ADDWIDGET "LABEL" "$BM.TXT_FROM$"
        ADDWIDGET "LABEL" "  $ARG9$"
        ADDWIDGET "LABEL" "$BM.TXT_TO$"
        IF MATCHES "mc?" "$ARG4$"
            ADDWIDGET "LABEL" "  $ARG4$:/$ARG10$ ?"
        ELSE
            ADDWIDGET "LABEL" "  $ARG4$:/$ARG11$ ?"
        ENDIF
        ADDWIDGET "RETURN" "$BM.TXT_NO$" "$BM.TXT_HINT_CANCEL_CHOICE$"
        ADDWIDGET "CALL" "$BM.TXT_YES$" "$BM.TXT_HINT_CONFIRM_CHOICE$" "$ARG0$" "INSTALL_COMP" "$ARG2$" "$ARG3$" "$ARG4$"
    ELSEIF MATCHES "ERASE_FW" "$ARG4$"
        GOTO "MENU_CONFRIM_YESNO_SHARED"
    ELSEIF MATCHES "POWEROFF" "$ARG4$"
        GOTO "MENU_CONFRIM_YESNO_SHARED"
    ENDIF
    RETURN 0

:MENU_CONFRIM_YESNO_SHARED
    ADDWIDGET "LABEL" "$ARG2$"
    ADDWIDGET "RETURN" "$BM.TXT_NO$" "$BM.TXT_HINT_CANCEL_CHOICE$"
    ADDWIDGET "CALL" "$BM.TXT_YES$" "$BM.TXT_HINT_CONFIRM_CHOICE$" "$ARG3$" "$ARG4$" "$ARG5$"
    RETURN 0

:ACTION
    CLEARWIDGETS
    SKIPBACK
    LOADEXEC "PBAT" "$ARG4$" "$ARG2$"
    RETURN 0

:INSTALL_COMP
    CLEARWIDGETS
    LOADEXEC "PBAT" "$ARG3$" "INSTALL" "$ARG4$"
    SKIPBACK
    RETURN 0

########################################################################

:MENU_MC_MANAGER
    CLEARWIDGETS
    SETTITLE "$BM.TXT_MC_MANAGER$"
    IF EXISTS "mc0:/"
        ADDWIDGET "CALL" "$BM.TXT_MC_REM_ALL_APPS$" "$BM.TXT_HINT_MC_REM_ALL_APPS$" "$ARG0$" "REM_APPS" "mc0"
        ADDWIDGET "CALL" "$BM.TXT_MC_REM_BM$" "$BM.TXT_HINT_MC_REM_BM$" "$ARG0$" "REM_DIR" "mc0:/BM"
        ADDWIDGET "CALL" "$BM.TXT_MC0_COPY_HOST$" "$BM.TXT_HINT_MC0_COPY_HOST$" "$ARG0$" "COPY_TO" "mc0:/*" "host:/MC"
    ENDIF
    IF EXISTS "mc1:/"
        ADDWIDGET "CALL" "$BM.TXT_MC1_COPY_HOST$" "$BM.TXT_HINT_MC1_COPY_HOST$" "$ARG0$" "COPY_TO" "mc1:/*" "host:/MC"
    ENDIF
    IF EXISTS "mc0:/"
        ADDWIDGET "CALL" "$BM.TXT_MC0_ERASE$" "$BM.TXT_HINT_MC0_ERASE$" "$ARG0$" "FORMAT_DEV" "mc0"
    ENDIF
    IF EXISTS "mc1:/"
        ADDWIDGET "CALL" "$BM.TXT_MC1_ERASE$" "$BM.TXT_HINT_MC1_ERASE$" "$ARG0$" "FORMAT_DEV" "mc1"
    ENDIF
    RETURN 0

:FORMAT_DEV
    CLEARWIDGETS
    FORMAT "$ARG2$:"
    RETURN 0

:COPY_TO
    CLEARWIDGETS
    RRM "mc1:/BOOT"
    COPY "$ARG2$" "$ARG3$"
    RETURN 0

:REM_APPS
    CLEARWIDGETS
    LOADEXEC "PBATS" "$ARG2$:/BM/APPS/*/APPINFO.PBT" "REMOVE"
    LOADEXEC "PBATS" "$ARG2$:/*/APPINFO.PBT" "REMOVE"
    RETURN 0

:REM_DIR
    CLEARWIDGETS
    RM "$ARG2$"
    RETURN 0

:MENU_SYS_INFO
    CLEARWIDGETS
    SETTITLE "$BM.TXT_SYS_INFO$"

    IF EQU "$BM.BIOS_MAJOR_VER$" "1"
        IF EQU "$BM.BIOS_MINOR_VER$" "10"
            SET "TMP" "v1/v2"
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "20"
            SET "TMP" "v3"
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "50"
            SET "TMP" "v4"
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "60"
            IF MATCHES "SCPH-300*" "$BM.CONSOLE_MODEL$"
                SET "TMP" "v5/v6"
            ELSEIF MATCHES "SCPH-370*" "$BM.CONSOLE_MODEL$"
                SET "TMP" "v7"
            ELSEIF MATCHES "SCPH-390*" "$BM.CONSOLE_MODEL$"
                SET "TMP" "v7/v8"
            ENDIF
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "70"
            SET "TMP" "v9"
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "90"
            SET "TMP" "v10/v11"
        ELSE
            SET "TMP" "???"
        ENDIF
    ELSEIF EQU "$BM.BIOS_MAJOR_VER$" "2"
        IF EQU "$BM.BIOS_MINOR_VER$" "00"
            SET "TMP" "v12"
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "10"
            SET "TMP" "v13"
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "20"
            IF MATCHES "SCPH-750*" "$BM.CONSOLE_MODEL$"
                SET "TMP" "v14"
            ELSEIF MATCHES "SCPH-770*" "$BM.CONSOLE_MODEL$"
                SET "TMP" "v15"
            ELSEIF MATCHES "SCPH-790*" "$BM.CONSOLE_MODEL$"
                SET "TMP" "v16"
            ELSEIF MATCHES "SCPH-900*" "$BM.CONSOLE_MODEL$"
                SET "TMP" "v17"
            ENDIF
        ELSEIF EQU "$BM.BIOS_MINOR_VER$" "30"
            SET "TMP" "v18"
        ELSE
            SET "TMP" "???"
        ENDIF
    ELSE
        SET "TMP" "???"
    ENDIF

    ADDWIDGET "LABEL" "BootManager: $BM.BM_PATH$/BM2.ELF v$BM.MAJOR_VER$.$BM.MINOR_VER$.$BM.PATCH_VER$"
    ADDWIDGET "LABEL" "Crystal Chip: v$BM.CC_MAJOR_VER$.$BM.CC_MINOR_VER$"
    ADDWIDGET "LABEL" "$BM.TXT_CONSOLE_MODEL$: $BM.CONSOLE_MODEL$"
    ADDWIDGET "LABEL" "$BM.TXT_CONSOLE_VERSION$: $TMP$"
    ADDWIDGET "LABEL" "$BM.TXT_CONSOLE_BIOS$: v$BM.BIOS_MAJOR_VER$.$BM.BIOS_MINOR_VER$"
    ADDWIDGET "LABEL" "$BM.TXT_CONSOLE_REGION$: Console-$BM.CONSOLE_REGION$ ROM-$BM.ROMVER_REGION$ Mecha-$BM.MECHA_REGION$"
    ADDWIDGET "LABEL" "i.Link ID: $BM.ILINK_ID$"
    RETURN 0

:MENU_CONFIG
    CLEARWIDGETS
    LOADEXEC "PBAT" "$BM.SCRIPTS$/CONFMENU.PBT" "MENU_CONFIG"
    RETURN 0

:MENU_DISC_TEST
    SKIPBACK
    CLEARWIDGETS
    SETTITLE "$BM.TXT_DISC_TEST$"
    ADDWIDGET "LABEL" "$BM.TXT_PS1_TEST_INFO$"
    ADDWIDGET "CALL" "$BM.TXT_START_PS1_TEST$" "" "$ARG0$" "DISC_TEST_PS1"
    RETURN 0

:DISC_TEST_PS1
    SKIPBACK
    CLEARWIDGETS
    SETTITLE "$BM.TXT_DISC_TEST$ PS1"

    # Set PS1 authentication mode.
    SETAUTH "PS1"

    # Cycle the tray to cause the disc to be rechecked for disc authentication.
    IF FAIL CYCLETRAY "WAIT"
        ADDWIDGET "LABEL" "$BM.TXT_PS1_FAIL$"
        ADDWIDGET "LABEL" ""
        ADDWIDGET "LABEL" "$BM.TXT_CHECK_SX$"
        ADDWIDGET "LABEL" ""
    ELSE
        ADDWIDGET "LABEL" "$BM.TXT_PS1_WORK$"
        # Set PS2 authentication mode.
        SETAUTH "PS2"
        # Cycle the tray to cause the disc to be rechecked for disc authentication.
        CYCLETRAY
    ENDIF
    RETURN 0
    